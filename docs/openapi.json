{
  "openapi": "3.0.3",
  "info": {
    "title": "Bus Tracking API",
    "description": "A RESTful API for real-time bus tracking and management",
    "version": "1.0.0",
    "contact": {
      "name": "Aishwara",
      "email": "charuwinda1998@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://bus-tracker-vxwc.onrender.com/",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server (for testing only)"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Authenticate a user and return a JWT token",
        "description": "Logs in a user with username and password, returning a JWT token for subsequent requests.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "hashedpassword123"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/routes": {
      "get": {
        "summary": "Get all routes",
        "description": "Retrieves a list of all bus routes.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Route"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new route",
        "description": "Creates a new bus route (admin/operator only).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Route created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Forbidden (insufficient role)"
          }
        }
      }
    },
    "/routes/{id}": {
      "get": {
        "summary": "Get a route by ID",
        "description": "Retrieves a specific route by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              }
            }
          },
          "404": {
            "description": "Route not found"
          }
        }
      },
      "put": {
        "summary": "Update a route",
        "description": "Updates a specific route (admin/operator only).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Route updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Route not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a route",
        "description": "Deletes a specific route (admin only).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Route deleted"
          },
          "404": {
            "description": "Route not found"
          }
        }
      }
    },
    "/buses": {
      "get": {
        "summary": "Get all buses",
        "description": "Retrieves a list of all buses.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bus"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bus",
        "description": "Creates a new bus (admin/operator only).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bus created"
          }
        }
      }
    },
    "/buses/{id}": {
      "get": {
        "summary": "Get a bus by ID",
        "description": "Retrieves a specific bus by its ID.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "responses": {
          "200": { "description": "Successful response", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Bus" } } } },
          "404": { "description": "Bus not found" }
        }
      },
      "put": {
        "summary": "Update a bus",
        "description": "Updates a specific bus (admin/operator only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BusInput" } } } },
        "responses": {
          "200": { "description": "Bus updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Bus" } } } },
          "400": { "description": "Invalid input" },
          "404": { "description": "Bus not found" }
        }
      },
      "delete": {
        "summary": "Delete a bus",
        "description": "Deletes a specific bus (admin only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "responses": { "204": { "description": "Bus deleted" }, "404": { "description": "Bus not found" } }
      }
    },
    "/trips": {
      "get": {
        "summary": "Get all trips",
        "description": "Retrieves a list of all trips.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Trip"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new trip",
        "description": "Creates a new trip (admin/operator only).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Trip created"
          }
        }
      }
    },
    "/trips/{id}": {
      "get": {
        "summary": "Get a trip by ID",
        "description": "Retrieves a specific trip by its ID.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "responses": {
          "200": { "description": "Successful response", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Trip" } } } },
          "404": { "description": "Trip not found" }
        }
      },
      "put": {
        "summary": "Update a trip",
        "description": "Updates a specific trip (admin/operator only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TripInput" } } } },
        "responses": {
          "200": { "description": "Trip updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Trip" } } } },
          "400": { "description": "Invalid input" },
          "404": { "description": "Trip not found" }
        }
      },
      "delete": {
        "summary": "Delete a trip",
        "description": "Deletes a specific trip (admin only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "responses": { "204": { "description": "Trip deleted" }, "404": { "description": "Trip not found" } }
      }
    },
    "/locations": {
      "get": {
        "summary": "Get all location updates",
        "description": "Retrieves a list of all location updates.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationUpdate"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new location update",
        "description": "Creates a new location update (admin/operator only).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Location update created"
          }
        }
      }
    }
    ,
    "/locations/trip/{tripId}": {
      "get": {
        "summary": "Get all location updates for a trip",
        "description": "Retrieves all location updates for a specific trip ID.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "tripId", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "responses": {
          "200": { "description": "Successful response", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/LocationUpdate" } } } } },
          "400": { "description": "Invalid input" },
          "404": { "description": "Trip not found" }
        }
      }
    }
    ,
    "/locations/{id}": {
      "get": {
        "summary": "Get a location update by ID",
        "description": "Retrieves a specific location update by its ID.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "responses": {
          "200": { "description": "Successful response", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LocationUpdate" } } } },
          "404": { "description": "Location update not found" }
        }
      },
      "put": {
        "summary": "Update a location update",
        "description": "Updates a specific location update (admin/operator only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LocationUpdateInput" } } } },
        "responses": {
          "200": { "description": "Location update updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LocationUpdate" } } } },
          "400": { "description": "Invalid input" },
          "404": { "description": "Location update not found" }
        }
      },
      "delete": {
        "summary": "Delete a location update",
        "description": "Deletes a specific location update (admin only).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }],
        "responses": { "204": { "description": "Location update deleted" }, "404": { "description": "Location update not found" } }
      }
    }
  },
  "components": {
    "schemas": {
      "Route": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "start": { "type": "string" },
          "end": { "type": "string" },
          "distance": { "type": "number" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "RouteInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "start": { "type": "string" },
          "end": { "type": "string" },
          "distance": { "type": "number" }
        },
        "required": ["name", "start", "end"]
      },
      "Bus": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "registration": { "type": "string" },
          "operatorId": { "type": "integer" },
          "routeId": { "type": "integer" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "BusInput": {
        "type": "object",
        "properties": {
          "registration": { "type": "string" },
          "operatorId": { "type": "integer" },
          "routeId": { "type": "integer" }
        },
        "required": ["registration", "operatorId", "routeId"]
      },
      "Trip": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "busId": { "type": "integer" },
          "routeId": { "type": "integer" },
          "scheduledStart": { "type": "string", "format": "date-time" },
          "scheduledEnd": { "type": "string", "format": "date-time" },
          "status": { "type": "string", "enum": ["scheduled", "in_progress", "completed", "delayed", "cancelled"] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "TripInput": {
        "type": "object",
        "properties": {
          "busId": { "type": "integer" },
          "routeId": { "type": "integer" },
          "scheduledStart": { "type": "string", "format": "date-time" },
          "scheduledEnd": { "type": "string", "format": "date-time" },
          "status": { "type": "string", "enum": ["scheduled", "in_progress", "completed", "delayed", "cancelled"] }
        },
        "required": ["busId", "routeId", "scheduledStart", "scheduledEnd"]
      },
      "LocationUpdate": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "tripId": { "type": "integer" },
          "lat": { "type": "number" },
          "longi": { "type": "number" },
          "timestamp": { "type": "string", "format": "date-time" },
          "speed": { "type": "number" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "LocationUpdateInput": {
        "type": "object",
        "properties": {
          "tripId": { "type": "integer" },
          "lat": { "type": "number" },
          "longi": { "type": "number" },
          "speed": { "type": "number" }
        },
        "required": ["tripId", "lat", "longi"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}